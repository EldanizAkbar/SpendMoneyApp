{"ast":null,"code":"const moneyFormat = money => {\n  return money.toLocaleString();\n};\n\nexport { moneyFormat };\n\nfunction numFormatter(money) {\n  if (money > 999 && money < 1000000) {\n    return money / 1000 + 'K';\n  } else if (money > 1000000 && money < 1000000000) {\n    return money / 1000000 + 'M';\n  } else if (money > 1000000000) {\n    return money / 1000000000 + 'b';\n  } else if (money < 900) {\n    return money;\n  }\n}\n\nexport { numFormatter };\n\nconst numberFormat = money => new Intl.NumberFormat('en-IN', {\n  style: 'currency',\n  currency: 'USD'\n}).format(money);\n\nexport { numberFormat };","map":{"version":3,"sources":["C:/Users/elden/Desktop/Spend Money/spend-money/src/components/format.js"],"names":["moneyFormat","money","toLocaleString","numFormatter","numberFormat","Intl","NumberFormat","style","currency","format"],"mappings":"AAAA,MAAMA,WAAW,GAAIC,KAAD,IAAW;AAC3B,SAAOA,KAAK,CAACC,cAAN,EAAP;AACH,CAFD;;AAGA,SAASF,WAAT;;AAEA,SAASG,YAAT,CAAsBF,KAAtB,EAA6B;AACzB,MAAIA,KAAK,GAAG,GAAR,IAAeA,KAAK,GAAG,OAA3B,EAAoC;AAChC,WAAQA,KAAK,GAAG,IAAT,GAAiB,GAAxB;AACH,GAFD,MAEO,IAAIA,KAAK,GAAG,OAAR,IAAmBA,KAAK,GAAG,UAA/B,EAA2C;AAC9C,WAAQA,KAAK,GAAG,OAAT,GAAoB,GAA3B;AACH,GAFM,MAEA,IAAIA,KAAK,GAAG,UAAZ,EAAwB;AAC3B,WAAQA,KAAK,GAAG,UAAT,GAAuB,GAA9B;AACH,GAFM,MAEA,IAAIA,KAAK,GAAG,GAAZ,EAAiB;AACpB,WAAOA,KAAP;AACH;AACJ;;AACD,SAASE,YAAT;;AAGA,MAAMC,YAAY,GAAIH,KAAD,IACnB,IAAII,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC7BC,EAAAA,KAAK,EAAE,UADsB;AAE7BC,EAAAA,QAAQ,EAAE;AAFmB,CAA/B,EAGGC,MAHH,CAGUR,KAHV,CADF;;AAMA,SAAQG,YAAR","sourcesContent":["const moneyFormat = (money) => {\r\n    return money.toLocaleString()\r\n}\r\nexport { moneyFormat }\r\n\r\nfunction numFormatter(money) {\r\n    if (money > 999 && money < 1000000) {\r\n        return (money / 1000) + 'K';\r\n    } else if (money > 1000000 && money < 1000000000) {\r\n        return (money / 1000000) + 'M';\r\n    } else if (money > 1000000000) {\r\n        return (money / 1000000000) + 'b';\r\n    } else if (money < 900) {\r\n        return money;\r\n    }\r\n}\r\nexport { numFormatter }\r\n\r\n\r\nconst numberFormat = (money) =>\r\n  new Intl.NumberFormat('en-IN', {\r\n    style: 'currency',\r\n    currency: 'USD'\r\n  }).format(money);\r\n\r\nexport {numberFormat}\r\n"]},"metadata":{},"sourceType":"module"}